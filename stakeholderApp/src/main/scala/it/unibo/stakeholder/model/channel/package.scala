package it.unibo.stakeholder.model

import it.unibo.stakeholder.util.SystemUser

package object channel {

  case class AuthenticationInfo(token: Token, user: SystemUser)

  protected abstract class TokenValue(token: String) {
    /**
     * @return a "Brearer" version of token : "Bearer $token"
     */
    def bearer : String = s"Bearer $token"
  }

  /**
   * Token identifier used by the user to make a request.
   * @param token The token as string.
   */
  case class TokenIdentifier(token: String) extends TokenValue(token)

  /**
   * A Token generated by server and sent to the clients. It contains the additional info of expiration time.
   * @param token The token as string.
   * @param expirationInMinute The token expiration time. Useful to the client for refresh it at right time.
   */
  case class Token(token: String, expirationInMinute: Int) extends TokenValue(token)

}
